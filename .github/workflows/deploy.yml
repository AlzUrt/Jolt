name: Deploy React App

on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushs vers la branche main

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Vous pouvez spécifier la version de Node.js que vous utilisez

    - name: Install dependencies
      run: npm install
      working-directory: ./frontend  # Remplacer par le chemin vers votre dossier frontend

    - name: Build React app
      run: npm run build
      working-directory: ./frontend  # Remplacer par le chemin vers votre dossier frontend

    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@4.1.0
      with:
        server: 213.130.145.28
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./frontend/build/
        server-dir: /public_html/
  backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'  # Spécifiez ici la version de PHP que vous utilisez

    - name: Create DATABASE_URL
      run: |
        echo "DATABASE_URL=mysql://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@${{ secrets.DATABASE_HOST }}:${{ secrets.DATABASE_PORT }}/${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV
      working-directory: ./backend

    - name: Create .env file
      run: |
        echo "APP_ENV=dev" > ./backend/.env
        echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> ./backend/.env
        echo "DATABASE_URL=$DATABASE_URL" >> ./backend/.env
        echo "CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'" >> ./backend/.env
        echo "JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem" >> ./backend/.env
        echo "JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem" >> ./backend/.env
        echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}" >> ./backend/.env

    - name: Install Composer dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
      working-directory: ./backend  # Remplacez par le chemin vers votre dossier backend

    - name: Cache Composer packages
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/backend/vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Set execute permission for console
      run: chmod +x ./backend/bin/console
      working-directory: ./

    - name: Check Symfony requirements
      run: php bin/console about
      working-directory: ./backend

    - name: Deploy to AlwaysData via SFTP
      uses: appleboy/scp-action@master
      with:
        host: ssh-chabertamaury.alwaysdata.net
        username: chabertamaury
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "./backend/"
        target: "/home/chabertamaury/www/backend/"
